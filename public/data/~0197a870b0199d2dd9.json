{"id":"~0197a870b0199d2dd9","title":"simple php job","snippet":"simple php job.\n\nneed to fix a bugs.\n\n\n\nfunction curl($url)\t{\n\t\t$ch\t= curl_init();\n\t\t\n\t\tcurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, FALSE);    \/\/ Prevent cURL from verifying SSL certificate\n\t\tcurl_setopt($ch, CURLOPT_FAILONERROR, TRUE);    \/\/ Script should fail silently on error\n\t\tcurl_setopt($ch, CURLOPT_PROXYTYPE, \u2018HTTP\u2019);\n\t\tcurl_setopt($ch, CURLOPT_HEADER, FALSE);\n\t\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, TRUE);\n\t\tcurl_setopt($ch, CURLOPT_TIMEOUT, 10);\n\t\tcurl_setopt($ch, CURLOPT_USERAGENT, $useragent);    \/\/ Setting useragent\n\t\tcurl_setopt($ch, CURLOPT_REFERER, $referer); \/\/ Referer Setting\n\t\tcurl_setopt($ch, CURLOPT_URL, $url);\n\t\t\n\t\t$data = curl_exec($ch);\n\n\t\tcurl_close($ch);\n\n\t\treturn $data;\n\t\t}\n\n    function scrape_between($data, $start, $end) {\n\t\n\t    if (stristr($data, $start) === false) {\n\t\treturn false;\n\t\t\n\t\t} else if (stristr($data, $end) === false) { \n\t\treturn false;\n\t\t\n\t\t} else {\n\t\t\t\t\n        $data = stristr($data, $start); \/\/ Stripping all data from before $start\n        $data = substr($data, strlen($start));  \/\/ Stripping $start\n        $stop = stripos($data, $end);   \/\/ Getting the position of the $end of the data to scrape\n        $data = substr($data, 0, $stop);    \/\/ Stripping all data from after and including the $end of the data to scrape\n        return $data;   \/\/ Returning the scraped data from the function\t\n\t\t}\n    }\n\t\n    $scraped_page = curl($unit_url);\n\n\n\n\n\n\/\/Resize image\nfunction resizeImage($target, $newcopy, $w, $h, $ext) {\n    list($w_orig, $h_orig) = getimagesize($target);\n    $scale_ratio = $w_orig \/ $h_orig;\n    if (($w \/ $h) > $scale_ratio) {\n        $w = $h * $scale_ratio;\n    } else {\n        $h = $w \/ $scale_ratio;\n    }\n    $img = \"\";\n    $ext = strtolower($ext);\n    if ($ext == \"gif\"){\n        $img = imagecreatefromgif($target);\n    } else if($ext ==\"png\"){\n        $img = imagecreatefrompng($target);\n    } else {\n        $img = imagecreatefromjpeg($target);\n    }\n    $tci = imagecreatetruecolor($w, $h);\n    imagecopyresampled($tci, $img, 0, 0, 0, 0, $w, $h, $w_orig, $h_orig);\n    imagejpeg($tci, $newcopy, 100);\n}\n\n\n\n$temp_it_sub_img = scrape_between($scraped_page, '<div class=\"swiper-slide\">', '<div class=\"swiper-button-next\">');\t\t\t\t\n\n\n$html = $temp_it_sub_img; \/\/ additional image source\npreg_match_all(\"\/<img src=\\\"([^\\\"]*?)\\\"\/\", $html, $matches, PREG_SET_ORDER); \/\/ get only pure image url group\n\nforeach ($matches as $val) { \n\n$sub_img_url = $val[1];\n\n$arr = explode(\"https:\/\/\",$sub_img_url);\n\nif(is_array($arr) && count($arr) > 0)\n{\n    $prepend = \"https:\/\/\";\n    foreach($arr as $img_url) \/\/\n    {\n        if(!empty($img_url))\n        {\n            $img_url = $prepend.$img_url; \necho $img_url;\n\t\t\t$path = G5_DATA_PATH.'\/item\/'.$ca_id.'\/';  \/\/ your saving path\n            $image_name = end(explode('-', $img_url)); \n\t\t\t$extra_img .= $it_id.'\/'.$image_name.',';\n            $new_img_path = $path.'\/'.$image_name; \n\t\t\t$ch = curl_init($img_url);\n\t\t\t$fp = fopen($path . $image_name, 'wb');\n\t\t\tcurl_setopt($ch, CURLOPT_FILE, $fp);\n\t\t\tcurl_setopt($ch, CURLOPT_HEADER, 0);\n\n\n\t\tif(!empty($image_name)) {\n\t\t\t$result = curl_exec($ch);\n\t\t\tresizeImage($new_img_path,$new_img_path,600,600,'jpg');\n\t\t\t\n\t\t\t}\n\t\t\tcurl_close($ch);\n\t\t\tfclose($fp);\n\n         }\n       }\n     }\n   }\n\n\n\n","category2":"Web, Mobile & Software Dev","subcategory2":"Web Development","skills":["curl","php"],"job_type":"Fixed","budget":5,"duration":null,"workload":null,"job_status":"Open","date_created":"2016-10-30T12:14:00+0000","url":"http:\/\/www.upwork.com\/jobs\/~0197a870b0199d2dd9","client":{"country":"United States","feedback":4.97,"reviews_count":6,"jobs_posted":22,"past_hires":12,"payment_verification_status":"VERIFIED"}}